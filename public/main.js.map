{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componentes/dashboard/dashboard.component.ts","./src/app/componentes/dashboard/dashboard.component.html","./src/app/componentes/home/home.component.ts","./src/app/componentes/home/home.component.html","./src/app/componentes/login/login.component.ts","./src/app/componentes/login/login.component.html","./src/app/componentes/nav/nav.component.ts","./src/app/componentes/nav/nav.component.html","./src/app/componentes/perfil/perfil.component.ts","./src/app/componentes/perfil/perfil.component.html","./src/app/componentes/registro/registro.component.ts","./src/app/componentes/registro/registro.component.html","./src/app/guards/auth.guard.ts","./src/app/servicios/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './componentes/login/login.component';\nimport { RegistroComponent } from './componentes/registro/registro.component';\nimport { HomeComponent } from './componentes/home/home.component';\nimport { DashboardComponent } from './componentes/dashboard/dashboard.component';\nimport { PerfilComponent } from './componentes/perfil/perfil.component';\n\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'registro', component: RegistroComponent},\n  {path: 'login' ,component: LoginComponent},\n  {path: 'dashboard',component: DashboardComponent,canActivate:[AuthGuard]},\n  {path: 'perfil',component: PerfilComponent,canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-nav></app-nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http' ; \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './componentes/nav/nav.component';\nimport { LoginComponent } from './componentes/login/login.component';\nimport { RegistroComponent } from './componentes/registro/registro.component';\nimport { HomeComponent } from './componentes/home/home.component';\nimport { PerfilComponent } from './componentes/perfil/perfil.component';\nimport { DashboardComponent } from './componentes/dashboard/dashboard.component';\n//Servicios\nimport { AuthService } from './servicios/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    LoginComponent,\n    RegistroComponent,\n    HomeComponent,\n    PerfilComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AuthService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<br>\n<div class=\"jumbotron text-center home\" >\n    <div style=\"border: 2px rgb(105, 110, 110) solid;\">\n        <br>\n        <!-- <img class=\"logo\" src=\"assets/img/shazam.svg\" alt=\"\"> -->\n        <img class=\"logo\" src=\"assets/img/fav.png\" alt=\"\">\n        <h1>Trienti</h1>\n        <p class=\"lead\">Bienvenido al sistema de atención de pedidos y reclamos</p>\n        <div>\n            <a class=\"btn btn-primary\" [routerLink]=\"['/registro']\">Registro</a> \n            <a class=\"btn btn-success ml-1\" [routerLink]=\"['/login']\" > Inicia Sesión</a>\n        </div>\n        <br>\n    </div>\n</div>\n\n<div class=\"jumbotron\">\n    <div style=\"border: 2px rgb(105, 110, 110) solid;\">\n        <div class=\"row\">\n            <div class=\"col-md-4 pt-2\" >        \n                <img src=\"assets/img/producto.svg\" alt=\"\">\n                <h3> Atiende tus pedidos</h3>\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum pariatur asperiores rem nesciunt rerum, repellat modi omnis.</p>\n            </div>\n            <div class=\"col-md-4 pt-2\">\n                <img src=\"assets/img/seguridad.svg\" alt=\"\">\n                <h3>Seguridad</h3>\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum pariatur asperiores rem nesciunt rerum, repellat modi omnis.</p>\n            </div>\n            <div class=\"col-md-4 pt-2\">\n                <img src=\"assets/img/hora.svg\" alt=\"\">\n                <h3>Ahorra tiempo</h3>\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum pariatur asperiores rem nesciunt rerum, repellat modi omnis.</p>\n            </div>\n        </div>\n    </div>\n</div>\n<footer>\n    \n</footer>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AuthService } from 'src/app/servicios/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n  username : String;\n  password : String \n  \n  constructor(\n                private auth: AuthService,\n                private router: Router,\n                private zone: NgZone) { }\n\n  ngOnInit(): void {\n    \n  }\n  onLoginSubmit(){\n \n    const usuario =  {\n      username: this.username,\n      password: this.password\n    }\n\n    this.auth.autenticarUsuario(usuario).subscribe(data =>{\n      \n        var resultado = JSON.parse(JSON.stringify(data)); \n        if(resultado.success){\n          console.log(resultado);\n          this.auth.guardarUsuarioData(resultado.token, resultado.usuario);\n\n          console.log('Usuario Logueado '+resultado.token + resultado.usuario);\n          this.router.navigate(['dashboard']);\n\n        } else{\n          console.error('Algo ocurrio: '+ resultado.msg);\n        }\n  });\n  }\n}\n","<br><br> <br>\n\n<div class=\"row\" >\n   \n\n    <div class=\"col-md-6\">\n\n        <div class=\"jumbotron formulario\">\n            <h3 class=\"page-header\">Iniciar Sesión</h3>\n            <br><br><br><br>\n                \n            <div class=\"form\">\n                <form (submit)=\"onLoginSubmit()\">\n                    <div class=\"form-group\">\n                        <label>Nombre de Usuario</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Contraseña</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n                    </div>\n                    <br>\n                    <input type=\"submit\" class=\"btn btn-success\" value=\"Iniciar Sesión\" >\n                </form>\n            </div>\n        </div>\n        \n    </div>\n\n\n    <div class=\"col-md-6\">\n        <div class=\"jumbotron text-center portada\" >\n            <div style=\"border: 2px rgb(255, 255, 255) solid;\">\n                <br><br>\n                <img class=\"logo\" src=\"assets/img/fav.png\" alt=\"\">\n                <h1>Trienti</h1>\n                <p class=\"lead\">Bienvenidos al sistema de registro.</p>\n                <br><br><br><br>\n                <div>\n                    <p>¿No te has registrado?</p>\n                    <a class=\"btn btn-primary ml-1\" [routerLink]=\"['/registro']\" > Registrate</a>\n                </div>\n                <br>\n            </div>\n        </div>\n\n    </div>\n    \n</div>\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AuthService } from 'src/app/servicios/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.sass']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(\n              public auth: AuthService,\n              private router: Router,\n              private zone: NgZone) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick(){\n          this.auth.cerrarSesion();\n          console.log('Has cerrado sesion')\n          this.router.navigate(['/login'])\n          return false;\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">Trienti</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/']\">Home</a>\n        </li>\n        <li *ngIf=\"auth.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n        </li>\n\n      </ul>\n\n      \n      <ul class=\"navbar-nav ml-auto\">\n        \n        \n        <li *ngIf=\"auth.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/perfil']\">Perfil</a>\n        </li>\n\n\n\n        <li *ngIf=\"!auth.loggedIn()\"  class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n        </li>\n        \n        <li *ngIf=\"!auth.loggedIn()\"  class=\"nav-item\"  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">\n            <a class=\"nav-link\" [routerLink]=\"['/registro']\">Registro</a>\n        </li>\n\n        <li *ngIf=\"auth.loggedIn()\" class=\"nav-item ml-2\">\n            <a class=\"btn btn-outline-success\" (click)=\"onLogoutClick()\">Cerrar Sesión</a>\n        </li>\n      </ul>\n\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../servicios/auth.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.sass']\n})\nexport class PerfilComponent implements OnInit {\n usuario = new Object; \n  constructor(\n    private auth: AuthService,\n    private router: Router\n    ) {}\n\n  ngOnInit(): void {\n    this.auth.getPerfil()\n    .subscribe(perfil => {\n      \n      var resultado = JSON.parse(JSON.stringify(perfil)); \n      this.usuario = resultado.usuario;\n      console.log(this.usuario);      \n    },\n    err => {\n      console.log(err);\n      return false\n    });\n  }\n\n}\n","<br><br>\n<div *ngIf=\"usuario\" class=\"jumbotron\">\n    <h2 class=\"page-header\">Nombre: {{usuario.nombre}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Nombre de Usuario: {{usuario.username}}</li>\n        <li class=\"list-group-item\">Email: {{usuario.correo}}</li>\n\n    </ul>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\n//Servicios\nimport { AuthService } from '../../servicios/auth.service';\nimport { Router } from '@angular/router'\n\n\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.sass']\n})\nexport class RegistroComponent implements OnInit {\n  nombre: String;\n  correo: String;\n  username: String;\n  password: String;\n\n  constructor(\n            private auth: AuthService,\n            private router: Router,\n            private zone: NgZone\n            ) {}\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit(){\n    var usuario = {\n      nombre: this.nombre,\n      correo: this.correo,\n      username: this.username,\n      password: this.password\n    }\n\n    //Registrar Usuario\n    this.auth.registrarUsuario(usuario).subscribe(data =>{\n      \n        \n        var resultado = JSON.parse(JSON.stringify(data)); \n        console.log(resultado);\n        console.log(resultado.success);\n        if(resultado.success){\n          console.log('Usuario Registrado');\n          this.router.navigate(['/login']);\n        }else{\n          console.error('Algo ocurrio');}\n\n  } )\n  \n\n}}\n","<br><br> <br>\n\n<div class=\"row\" >\n    <div class=\"col-md-6\">\n        <div class=\"jumbotron text-center portada\" >\n            <div style=\"border: 2px rgb(255, 255, 255) solid;\">\n                <br><br>\n                <img class=\"logo\" src=\"assets/img/fav.png\" alt=\"\">\n                <h1>Trienti</h1>\n                <p class=\"lead\">Bienvenidos al sistema de registro.</p>\n                <br><br><br><br>\n                <div>\n                    <p>¿Ya tienes una cuenta?</p>\n                    <a class=\"btn btn-success ml-1\" [routerLink]=\"['/login']\" > Inicia Sesión</a>\n                </div>\n                <br>\n            </div>\n        </div>\n\n    </div>\n    \n\n    <div class=\"col-md-6\">\n\n        <div class=\"jumbotron formulario\">\n            <h3 class=\"page-header\">Registro de usuario</h3>\n                \n            <div class=\"form\">\n                <form (submit)=\"onRegisterSubmit()\">\n                    <div class=\"form-group\">\n                        <label>Nombre</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"nombre\" name=\"nombre\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Nombre de Usuario</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Correo</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"correo\" name=\"correo\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Contraseña</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n                    </div>\n                    <input type=\"submit\" class=\"btn btn-primary\" value=\"Registrar\">\n                </form>\n            </div>\n        </div>\n        \n    </div>\n</div>\n\n","import {Injectable } from '@angular/core'\r\nimport {Router, CanActivate } from '@angular/router'\r\nimport {AuthService} from '../servicios/auth.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private auth: AuthService,\r\n                private router: Router){ }\r\n\r\n                \r\n    \r\n    canActivate(){\r\n        if(this.auth.loggedIn()){\r\n            return true;\r\n        } else{\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { map } from \"rxjs/operators\";  \nimport { JwtHelperService} from '@auth0/angular-jwt'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  usuario: any; \n\n  constructor(private http:HttpClient,) {\n  \n   }\n\n  registrarUsuario(usuario){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type','aplication/json');\n    console.log(headers);\n    return this.http.post('http://localhost:3000/usuarios/registro',usuario,{headers: headers});\n  }\n\n  autenticarUsuario(usuario){\n    const headers = new HttpHeaders();\n    headers.append('Content-Type','aplication/json');\n    return this.http.post('http://localhost:3000/usuarios/autenticacion',usuario, {headers: headers});\n  }\n\n  getPerfil(){\n    this.cargarToken(); \n    var header = {\n      headers: new HttpHeaders()\n        .set('Authorization',`${this.authToken}`)\n    }\n    return this.http.get('http://localhost:3000/usuarios/perfil',header);\n  } \n\n  cargarToken(){\n    const token  = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  guardarUsuarioData(token,usuario){\n    localStorage.setItem('id_token',token);\n    localStorage.setItem('usuario',JSON.stringify(usuario));\n    this.authToken = token;\n    this.usuario = usuario;\n  }\n\n  loggedIn() {\n    const jwt  = new JwtHelperService()\n    const token: string = localStorage.getItem('id_token');\n    return token != null && !jwt.isTokenExpired(token);\n    }\n\n  cerrarSesion(){\n    this.authToken = null;\n    this.usuario = null;\n    localStorage.clear()\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}